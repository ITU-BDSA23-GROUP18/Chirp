@using Microsoft.AspNetCore.Authentication.OpenIdConnect
@using Microsoft.Extensions.Options
@using Microsoft.Identity.Web

@inject IOptionsMonitor<MicrosoftIdentityOptions> AzureAdb2COptions

@{
    var options = AzureAdb2COptions.Get(OpenIdConnectDefaults.AuthenticationScheme);
}

<ul class="navbar-nav">
    @if (User.Identity!.IsAuthenticated)
    {
        <div class="dropdown">
            <button id="dropbtn" class="dropbtn" onclick="toogleFunction()"></button>
            <label for="dropbtn">
                <img class="profilePicture_img_nav" src="@Model.ProfilePictureUrl" alt="profile picture">
            </label>
            
            <div id="dropdown" class="dropdown-content">
                <a href="\@User.Identity.Name" class="fa">&#xf15c; My page</a>
                <hr style="margin: 0"/>
                <a class="fa" href="\AboutMe">&#xf013; Settings</a>
                <hr style="margin: 0"/>
                <a asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignOut" class="fa">&#xf08b; Sign out</a>
            </div>
        </div>
    }
    else
    {
    <a class="nav-link text-dark" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignIn">Sign in</a>
    }
</ul>

<script>
   /* When the user clicks on the button, 
   toggle between hiding and showing the dropdown content */
   function toogleFunction() {
     document.getElementById("dropdown").classList.toggle("show");
   }
   
   // Close the dropdown if the user clicks outside of it
   window.onclick = function(event) {
     if (!event.target.matches('.dropbtn')) {
       const dropdowns = document.getElementsByClassName("dropdown-content");
       let i;
       for (i = 0; i < dropdowns.length; i++) {
         var openDropdown = dropdowns[i];
         if (openDropdown.classList.contains('show')) {
           openDropdown.classList.remove('show');
         }
       }
     }
   }
</script>
